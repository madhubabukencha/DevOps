############ Installation on Ubuntu ###############

1. To install kubectl binary with curl on Linux
   https://kubernetes.io/docs/tasks/tools/install-kubectl-linux/

2. Once kubectl installation completed, then we start installing minikube
   minikube helps to start single node cluster
   https://minikube.sigs.k8s.io/docs/start/

   2.1: $ curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
   2.2: $ sudo install minikube-linux-amd64 /usr/local/bin/minikube
   2.3: Once minikube installation completed, to start a cluster
        $ minikube start
   2.4: To check status
        $ minikube status

   2.5: To stop cluster
        $ minikube stop

3. Interact with cluster
   3.1: If you already have kubectl installed, you can now use it to access your shiny new cluster:
        $ kubectl get po -A
   3.2: To see the dashboard
        $ minikube dashboard

4. Deploying an application
   4.1: Create a sample deployment and expose it on port 8080
        $ kubectl create deployment hello-minikube --image=k8s.gcr.io/echoserver:1.4
        $ kubectl expose deployment hello-minikube --type=NodePort --port=8080
   4.2: It may take a moment, but your deployment will soon show up when you run
        $ kubectl get services hello-minikube
   4.3: The easiest way to access this service is to let minikube launch a web browser for you:
        $ minikube service hello-minikube

5. Important kubectl commands
   5.1: To get deployments
        $ kubectl get deployments
   5.2: To start an application on the cluster
        $ kubectl run <application_name>
   5.3: To get cluster info
        $ kubectl cluster-info
   5.4: To get nodes
        $ kubectl get nodes
   5.5: To delete service of hello-minikube
        $ kubectl delete service hello-minikube
   5.6: To delete deployement of hello-minikube
        $ kubectl delete deployment hello-minikube


6. Important pod related commands
   6.1: To get pods
        $ kubectl get pods
   6.2: To create pod for nginx(just a example)
        $ kubectl run nginx --image=nginx
   6.3: To get more information about the pod nginx (just a example)
        $ kubectl describe pod nginx
   6.4: To get little bit more information about the pod in a single line
        $ kubectl get pods -o wide
   6.5: To delete a pod
        $ kubectl delete pod <name_of_pod>
   6.6: To create pod from yml file
        $ kubectl create -f pod-defination.yml
   6.7: Shortcut to see image used for creating pod nginx
        $ kubectl describe pod nginx | grep -i "image"
   6.8: To perform dry run and save it pod.yml file
        $ kubectl describe pod nginx | grep -i "image"
   6.9: To edit the configuration of running pod
        $ kubectl edit pod nginx


7. IMPORTANT REPLICA CONTROLLER AND REPLICASET COMMANDS
   7.1: To create replicaset/ replica controller from the yml file
        $ kubectl create -f <file_name.yml>
   7.2: To get replica pods created by the replica controller
        $ kubectl get replicationcontroller
   7.3: To get replica's create by the replicaset
        $ kubectl get replicaset
   7.4: If we scaled replicas from 3 to 6 then to update replicaset
        $ kubectl  replace -f <file_name.yml>
   7.5: To directly scale using commnand line(Note: It wouldn't change yml file)
        $ kubectl scale --replicas=6 -f <file_name.yml>
   7.6: To delete your replicaset you need to give your replicaset name_of_pod
        $ kubectl delete replicaset <replicaset_name>
           
   
